<?php

namespace DummyNamespace;

use DummyFullModelClass;
use Illuminate\Http\Request;
use App\Http\Requests\DummyModelClassRequest;
use App\Http\Resources\DummyModelClassResource;
use DummyRootNamespaceHttp\Controllers\Controller;
use Spatie\QueryBuilder\QueryBuilder;

class DummyClass extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        $cars = QueryBuilder::for(DummyModelClass::where('active', 1))
            ->allowedFilters('')
            ->defaultSort('')
            ->allowedSorts('')
            ->paginate($request->perPage ?? 10);

        return response()->json(DummyModelClassResource::collection($cars)->response()->getData(true), 200);
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  DummyModelClassRequest  $request
     * @return \Illuminate\Http\Response
     */
    public function store(DummyModelClassRequest $request)
    {
        try {
            DummyModelClass::create($request->all());
            return response()->json(['message' => ''], 201);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Unable to create entry, ' . $e->getMessage()], 500);
        }
    }

    /**
     * Display the specified resource.
     *
     * @param  \DummyModelClass  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function show($id)
    {
        $data = new DummyModelClassResource(DummyModelClass::find($id));
        return response()->json(['data' => $row], 200);
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  DummyModelClassRequest  $request
     * @param  \DummyFullModelClass  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function update(DummyModelClassRequest $request, $id)
    {
        try {
            DummyModelClass::find($id)->update($request->all());
            return response()->json(['message' => ''], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Unable to update entry, ' . $e->getMessage()], 500);
        }
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  \DummyFullModelClass  $DummyModelVariable
     * @return \Illuminate\Http\Response
     */
    public function destroy(DummyModelClass $DummyModelVariable)
    {
        try {
            $DummyModelVariable->delete();
            return response()->json(['message' => ''], 200);
        } catch (\Exception $e) {
            return response()->json(['message' => 'Unable to delete entry, ' . $e->getMessage()], 500);
        }
    }
}
